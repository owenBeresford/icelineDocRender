<?php
namespace icelineLtd\icelineDocRenderBundle\Tests\Services\Chunks;

use icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk;
use icelineLtd\icelineDocRenderBundle\Services\PHPArrayConfig;
$_SERVER['SERVER_ADDR']='127.0.0.1';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-01 at 12:23:29.
 */
class PageMetaChunkTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var PageMetaChunk
     */
    protected $obj;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->obj = new PageMetaChunk("fred", "data", "pagemeta", false);
		$cfile=__DIR__.'/../../../Resources/config/site_config.php';
		$conf=new PHPArrayConfig($cfile);
		$this->obj->setConf($conf);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk::setConf
     * @todo   Implement testSetConf().
     */
    public function testSetConf()
    {
        $this->markTestSkipped(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk::getChunkType
     * @todo   Implement testGetChunkType().
     */
    public function testGetChunkType()
    {
        $this->markTestSkipped(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk::unpack
     * @todo   Implement testUnpack().
     */
    public function testUnpack1()
    {
		$d=<<<EOTEXT
|Name                = home
|Title               = IT and process
|Author              = Owen Beresford
|DocVersion          = 2.0
|AccessGroup         = 0
|Method              = GET
|CodeVersion         = 2.0.0
|Strapline           = Literate programming: 100,000 words and rising
|Keywords            = home index
|frame 			= reach-frame
|description 		= Assorted articles and processes on the current state of software engineering. Please click through to articles...
EOTEXT;
		$ret=$this->obj->unpack($d, 'pagemeta', false);
		$this->assertSame('object', gettype($ret), "We have an object");
		$this->assertSame('icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk', get_class($ret), "Correct class");
		$this->assertSame('array', gettype($ret->getData()), "Object contains array of data");
		$this->obj=$ret;
    }

    public function testUnpack2()
    {
		$d=<<<EOTEXT
|NAME                = HOME
|TITLE               = IT AND PROCESS
|AUTHOR              = OWEN BERESFORD
|DOCVERSION          = 2.0
|ACCESSGROUP         = 0
|METHOD              = GET
|CODEVERSION         = 2.0.0
|STRAPLINE           = LITERATE PROGRAMMING: 100,000 WORDS AND RISING
|KEYWORDS            = HOME INDEX
|FRAME 			= REACH-FRAME
|DESCRIPTION 		= ASSORTED ARTICLES AND PROCESSES ON THE CURRENT STATE OF SOFTWARE ENGINEERING. PLEASE CLICK THROUGH TO ARTICLES...
EOTEXT;
		$ret=$this->obj->unpack($d, 'pagemeta', false);
		$this->assertSame('object', gettype($ret), "We have an object");
		$this->assertSame('icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk', get_class($ret), "Correct class");
		$this->assertSame('array', gettype($ret->getData()), "Object contains array of data");
		$this->obj=$ret;

    }

    public function testUnpack3()
    {
		$d=<<<EOTEXT
|Name                = home
|Title               = IT and process
|Author              = Owen Beresford
|DocVersion          = 2.0
|AccessGroup         = 
|Method              = GET
|CodeVersion         = 2.0.0
|Strapline           = Literate programming: 100,000 words and rising
|Keywords            = home index
|frame 			= reach-frame
|description 		= Assorted articles and processes on the current state of software engineering. Please click through to articles...
EOTEXT;
		$ret=$this->obj->unpack($d, 'pagemeta', false);
		$this->assertSame('object', gettype($ret), "We have an object");
		$this->assertSame('icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk', get_class($ret), "Correct class");
		$this->assertSame('array', gettype($ret->getData()), "Object contains array of data");
		$this->obj=$ret;

    }

    public function testUnpack4()
    {
		$d=<<<EOTEXT
|Name                = home
|Title               = IT and process
|Author              = Owen Beresford
|DocVersion          = 2.0
|AccessGroup         = 0
|Method              = GET
|CodeVersion         = 2.0.0
|Strapline           = Literate programming: 100,000 words and rising
|           = home index
|frame 			= reach-frame
|description 		= Assorted articles and processes on the current state of software engineering. Please click through to articles...
EOTEXT;
		$ret=$this->obj->unpack($d, 'pagemeta', false);
		$this->assertSame('object', gettype($ret), "We have an object");
		$this->assertSame('icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk', get_class($ret), "Correct class");
		$this->assertSame('array', gettype($ret->getData()), "Object contains array of data");
		$this->obj=$ret;

    }

    public function testUnpack5()
    {
		$d=<<<EOTEXT
|Name                = home
|Title               = IT and process
|Author              = Owen Beresford
|AccessGroup         = 0
|Method              = GET
|CodeVersion         = 2.0.0
|Strapline           = Literate programming: 100,000 words and rising
|keywords           = home index
|frame 			= reach-frame
|description 		= Assorted articles and processes on the current state of software engineering. Please click through to articles...
EOTEXT;
		$ret=$this->obj->unpack($d, 'pagemeta', false);
		$this->assertSame('object', gettype($ret), "We have an object");
		$this->assertSame('icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk', get_class($ret), "Correct class");
		$this->assertSame('array', gettype($ret->getData()), "Object contains array of data");
		$this->obj=$ret;

    }


    /**
     * @covers icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk::validate
     * @todo   Implement testValidate().
     */
    public function testValidate1()
    {
		$this->testUnpack1();
		$this->assertTrue($this->obj->validate());
	}

    /**
     * @covers icelineLtd\icelineDocRenderBundle\Services\Chunks\PageMetaChunk::validate
     * @todo   Implement testValidate().
     */
    public function testValidate2()
    {
		$this->setExpectedException('icelineLtd\icelineDocRenderBundle\Exceptions\BadResourceException');
		$this->testUnpack5();
		$this->assertTrue($this->obj->validate());
	}

}
